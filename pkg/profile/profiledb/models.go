// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package profiledb

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type BackupCode struct {
	Uuid      uuid.UUID          `json:"uuid"`
	UserUuid  uuid.UUID          `json:"user_uuid"`
	Code      string             `json:"code"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UsedAt    pgtype.Timestamptz `json:"used_at"`
	DeletedAt pgtype.Timestamptz `json:"deleted_at"`
}

type GooseDbVersion struct {
	ID        int32        `json:"id"`
	VersionID int64        `json:"version_id"`
	IsApplied bool         `json:"is_applied"`
	Tstamp    sql.NullTime `json:"tstamp"`
}

type Login struct {
	Uuid                 uuid.UUID      `json:"uuid"`
	CreatedAt            time.Time      `json:"created_at"`
	UpdatedAt            time.Time      `json:"updated_at"`
	DeletedAt            sql.NullTime   `json:"deleted_at"`
	CreatedBy            sql.NullString `json:"created_by"`
	Password             []byte         `json:"password"`
	Username             sql.NullString `json:"username"`
	TwoFactorSecret      pgtype.Text    `json:"two_factor_secret"`
	TwoFactorEnabled     pgtype.Bool    `json:"two_factor_enabled"`
	TwoFactorBackupCodes []string       `json:"two_factor_backup_codes"`
}

type Login2fa struct {
	Uuid                 uuid.UUID    `json:"uuid"`
	LoginUuid            uuid.UUID    `json:"login_uuid"`
	TwoFactorSecret      pgtype.Text  `json:"two_factor_secret"`
	TwoFactorEnabled     pgtype.Bool  `json:"two_factor_enabled"`
	TwoFactorBackupCodes []string     `json:"two_factor_backup_codes"`
	CreatedAt            time.Time    `json:"created_at"`
	UpdatedAt            sql.NullTime `json:"updated_at"`
	DeletedAt            sql.NullTime `json:"deleted_at"`
}

type PasswordResetToken struct {
	Uuid      uuid.UUID          `json:"uuid"`
	UserUuid  uuid.UUID          `json:"user_uuid"`
	Token     string             `json:"token"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	ExpireAt  pgtype.Timestamptz `json:"expire_at"`
	UsedAt    pgtype.Timestamptz `json:"used_at"`
}

type Role struct {
	Uuid        uuid.UUID   `json:"uuid"`
	Name        string      `json:"name"`
	Description pgtype.Text `json:"description"`
}

type User struct {
	Uuid                 uuid.UUID      `json:"uuid"`
	CreatedAt            time.Time      `json:"created_at"`
	LastModifiedAt       time.Time      `json:"last_modified_at"`
	DeletedAt            sql.NullTime   `json:"deleted_at"`
	CreatedBy            sql.NullString `json:"created_by"`
	Email                string         `json:"email"`
	Name                 sql.NullString `json:"name"`
	Password             []byte         `json:"password"`
	VerifiedAt           sql.NullTime   `json:"verified_at"`
	Username             sql.NullString `json:"username"`
	TwoFactorSecret      pgtype.Text    `json:"two_factor_secret"`
	TwoFactorEnabled     pgtype.Bool    `json:"two_factor_enabled"`
	TwoFactorBackupCodes []string       `json:"two_factor_backup_codes"`
	LoginUuid            uuid.NullUUID  `json:"login_uuid"`
}

type UserRole struct {
	UserUuid uuid.UUID `json:"user_uuid"`
	RoleUuid uuid.UUID `json:"role_uuid"`
}
