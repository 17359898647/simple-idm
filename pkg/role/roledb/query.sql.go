// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package roledb

import (
	"context"

	"github.com/google/uuid"
)

const findRoles = `-- name: FindRoles :many
SELECT uuid, name
FROM roles
ORDER BY name ASC
`

type FindRolesRow struct {
	Uuid uuid.UUID `json:"uuid"`
	Name string    `json:"name"`
}

func (q *Queries) FindRoles(ctx context.Context) ([]FindRolesRow, error) {
	rows, err := q.db.Query(ctx, findRoles)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FindRolesRow
	for rows.Next() {
		var i FindRolesRow
		if err := rows.Scan(&i.Uuid, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
